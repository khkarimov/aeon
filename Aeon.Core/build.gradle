def baseProjectName = 'Aeon.Core'
def baseProjectDescription = 'Aeon Core'
def base = baseProjectName

group 'aeon'
version '0.2.6'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.mockito:mockito-core:2.7.22"

    compile 'ro.fortsoft.pf4j:pf4j:0.13.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1-1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.1'

    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'org.apache.logging.log4j:log4j-api:2.5'

    compile 'joda-time:joda-time:2.9.3'
}

jar {
    version = version
    baseName = base
    archiveName = base + '-' + version + '.jar'

    manifest {
        attributes 'Implementation-Title': baseProjectDescription,
                'Implementation-Version': version
    }

//    from configurations.compile.collect {
//        it.isDirectory() ? it : zipTree(it)
//    }
}

task copyToDistrib(type: Copy) {
    group 'copy'
    println('Copying Aeon.Core to distrib folder')

    def source = 'build/libs/' + base + '-' + version + '.jar'
    def destination = '../distrib'
    def distribFolder = new File('../distrib', '')

    if (!distribFolder.exists()) {
        println('Creating distrib folder')

        distribFolder.mkdir()
    } else {
        println('Distrib exists')
    }

    from source
    into destination
}

copyToDistrib.outputs.upToDateWhen { false }

assemble.finalizedBy(copyToDistrib)

apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'aeon.core'
        }
    }
}
