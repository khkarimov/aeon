def baseProjectName = 'Aeon.Plugin.Selenium'
def baseProjectDescription = 'Aeon Selenium Plugin'
def base = baseProjectName

configurations {
    aeon
    compile.extendsFrom(aeon)
}

ext {
    // seleniumVersion = '3.11.0'
    seleniumVersion = '3.12.0'  //Updated on 5-16-2018
    appiumVersion = '5.0.4'
}

dependencies {
    compile project(':Aeon.Core.Web')

    // Drivers
    compile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    compile "org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion"
    compile "org.seleniumhq.selenium:selenium-edge-driver:$seleniumVersion"
    compile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    compile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

    compile "io.appium:java-client:$appiumVersion"
}

jar {
    version = version
    baseName = base
    archiveName = base + '-' + version + '.jar'

    manifest {
        attributes 'Implementation-Title': baseProjectDescription,
                'Implementation-Version': version,
                'Plugin-Id': 'SeleniumAeon',
                'Plugin-Version': version,
                'Plugin-Class': 'aeon.selenium.SeleniumPlugin'
    }
}

task fatJar(type: Jar) {
    group 'build'
    version = version
    baseName = base
    archiveName = base + '-all-' + version + '.jar'

    manifest {
        attributes 'Implementation-Title': baseProjectDescription,
                'Implementation-Version': version,
                'Plugin-Id': 'SeleniumAeon',
                'Plugin-Version': version,
                'Plugin-Class': 'aeon.selenium.SeleniumPlugin'
    }

    from configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it)
    }
    with jar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'aeon.selenium'
        }
    }
}
